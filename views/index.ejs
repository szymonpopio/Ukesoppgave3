<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Document</title>
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
	<link rel="stylesheet" href="./main.css">
	<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap" rel="stylesheet">
</head>
<body>
	<nav class="navbar">
		<form action="/logout" method="post" class="container-fluid justify-content-start">
			<button type="submit" class="btn btn-primary btn-block mb-4">Log Out</button>
		</form>
	</nav>
	<div class="home-div">
		<p class="text-div">
			Jeg valgte å bruke Passport, og mer spesifikt passport-local som er et API og tar inn brukernavn og passord for å la en bruker logge inn, 
			i mitt tilfelle er det bare en admin bruker som kan brukes men med en database kan man lage egne brukere. 
			<br><br>
			Passport bruker over 500 strategier for å authentisere en bruker, man kan bruke forskjellige strategier for å authentiseres på 
			forskjellige måte for eksempel ved hjelp av facebook, twitter, google, etc. Passport er veldig lightweight og krever ikke 
			veldig mye kode for å få til authentisering, og måten det er satt opp trenger du ikke laste ned alle strategiene som Passport gir tilgang 
			til, du trenger bare velge de du kommer til å bruke. Dette gjør Passport ganske enkelt å bruke hvis man vet hva man driver med.
			<br><br>
			Passport er et veldig sikkert rammeverk, du kan med et par linjer kode legge til 
			salting og hashing og gjøre dataen din ekstremt vanskelig å finne. Den største trusselen jeg ser ved å bruke Passport er hvis du er på 
			en nettside som bruker OAuth og du ikke følger med så du gir tilgang til data som du egentlig ikke ville gi fra deg. Dette er fordi måten 
			Google OAuth funker er at personen som lager en authentication på Google kan selv velge hvaslags data som er påkrevd.
			<br><br>
			Passport kan brukes i sammenheng med andre ting som bcrypt for å hashe passord, det dette gjør er å gjøre ett passord til en 
			kombinasjon av numbere, symboler og bokstaver. I sammenheng med salting, som er å legge til et sett antall bokstaver til en passord, 
			kan man gjøre passord veldig sikre og vanskelige å hacke.
			<br><br>
			Andre ting som kan gjøre det enda mer sikkert er å bruke en bra session secret som gjør det mye vanskligere å hacke, man kan også 
			legge til en rate limit på serveren, det dette gjør er at hvis noen prøver å overbelaste serveren med request så blir de stoppet 
			fordi serveren har en innebygd rate limit som gjør det umulig å sende flere requests en det er tilat.
			<br><br>
			Passport kommer ikke med noen trusler og er generelt ganske trygt å bruke, den eneste måten å få en stor trusel er å gjøre noe som 
			kan føre til det selv, som å ikke sjule secret i en .env.
			<br><br>
			I min mening så er Passport et veldig sikkert rammeverk hvis det er brukt på en bra måte, denne nettsiden bruker ikke noe mer enn 
			brukernavn og passord og det er ingen type sjuling av data. Men en nettside som har investert mye i sikkerhet er et ganske sikkert 
			sted å ha dataen sin, det eneste jeg hadde vært redd for er at nettsiden selv bruker din data på en manipulativ eller dårlig måte.
		</p>
	</div>
</body>
</html>